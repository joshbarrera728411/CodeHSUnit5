//First File:
public class ExpandingArray
{
    private static final int STARTING_SIZE = 10;
    private int[] arr;
    private int currentSize;
    private int numElements;
    
    public ExpandingArray()
    {
        arr = new int[STARTING_SIZE];
        currentSize = STARTING_SIZE;
        numElements = 0;
    }
    
    // Remove the element at index `index` and shift
    // all subsequent elements to the left. 
   public int remove(int index)
{
    if (index < 0 || index >= numElements) {
        throw new IndexOutOfBoundsException("Index out of bounds");
    }
    
    int removedElement = arr[index];
    
    // Shift elements to the left starting from index + 1
    for (int i = index + 1; i < numElements; i++) {
        arr[i - 1] = arr[i];
    }
    
    numElements--; // Decrement the number of elements
    return removedElement;
}

public void add(int index, int element)
{
    if (index < 0 || index > numElements) {
        throw new IndexOutOfBoundsException("Index out of bounds");
    }
    
    if (isFull()) {
        expand();
    }
    
    // Shift elements to the right starting from index
    for (int i = numElements; i > index; i--) {
        arr[i] = arr[i - 1];
    }
    
    arr[index] = element;
    numElements++; // Increment the number of elements
}

public int size()
{
    return numElements;
}
    private boolean isFull()
    {
        return numElements == currentSize;
    }
    
    private void expand()
    {
        System.out.println("Expanding");
        int newSize = currentSize * 2;
        int[] newArray = new int[newSize];
        
        // Copy over old elements
        for(int i = 0; i < currentSize; i++)
        {
            newArray[i] = arr[i];
        }
        
        currentSize = newSize;
        arr = newArray;
    }
    
    public int get(int index)
    {
        return arr[index];
    }
    
    public void add(int x)
    {
        if(isFull())
        {
            expand();
        }
        arr[numElements] = x;
        numElements++;
    }
    
    public String toString()
    {
        // Return empty curly braces if the array is empty
        if (numElements == 0)
        {
            return "{}";
        }
        
        // Return Elements 
        String str = "{";
        for (int i=0; i < numElements; i++)
        {
            str += arr[i] + ", ";
        }
        if (str.length() > 0 && str.charAt(str.length()-2)==',')
        {
            str = str.substring(0, str.length()-2);
            str += "}";
        }
        return str;
    }
}

//Second File:
public class ArrayTester extends ConsoleProgram
{
    public void run()
    {
        ExpandingArray arr = new ExpandingArray();
        
        for(int i = 0; i < 100; i++)
        {
            System.out.println("adding " + i);
            arr.add(i);
        }
        
        for(int i = 0; i < 100; i++)
        {
            System.out.println(arr.get(i));
        }
        
    }
}
